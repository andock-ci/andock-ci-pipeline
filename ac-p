#!/bin/bash


#------------------------------ Help functions --------------------------------

# Nicely prints command help
# @param $1 command name
# @param $2 description
# @param $3 [optional] command color
# @author Oleksii Chekulaiev
printh ()
{
	local COMMAND_COLUMN_WIDTH=25;
	case "$3" in
		yellow)
			printf "  ${yellow}%-${COMMAND_COLUMN_WIDTH}s${NC}" "$1"
			echo -e "	$2"
			;;
		green)
			printf "  ${green}%-${COMMAND_COLUMN_WIDTH}s${NC}" "$1"
			echo -e "	$2"
			;;
		*)
			printf "  %-${COMMAND_COLUMN_WIDTH}s" "$1"
			echo -e "	$2"
			;;
	esac

}

echo-red () { echo -e "${red}$1${NC}"; }
echo-green () { echo -e "${green}$1${NC}"; }
echo-green-bg () { echo -e "${green_bg}$1${NC}"; }
echo-yellow () { echo -e "${yellow}$1${NC}"; }


show_help ()
{
    printh "Andock-ci Pipeline command reference" "" "green"

	echo
  printh "build" "Runs role: andock-ci.build"
	printh "up"  "Runs role: andock-ci.fin --tags up"
	printh "update"  "Runs role: andock-ci.fin --tags update"

	printh "test"  "Runs role: andock-ci.test"
	printh "reset" "Recreate project services and containers (${yellow}fin help reset${NC})"
	printh "remove (rm)" "Stop project services and remove their containers (${yellow}fin help remove${NC})"
	printh "status (ps)" "List project services"

}



get_settings_path ()
{
	echo "$PWD/.andock-ci/andock-ci.yml"
}



run_build ()
{
local settings_path=$(get_settings_path)
export ANSIBLE_ROLES_PATH="~/.andock-ci/roles"
export ANSIBLE_RETRY_FILES_ENABLED="False"
#ansible-galaxy install andock-ci.build --force
ansible-playbook -e "@${settings_path}" -e "build_dir=$PWD" /dev/stdin <<END
---
- hosts: localhost
  vars:
    branch: master
  tasks:
    - debug: msg={{build_dir}}
  roles:
    - { role: andock-ci.build, build_dir: "{{ build_dir }}" }

END

}

case "$1" in
	build)
		run_build "$@"
		;;
	help)
		shift
		;;
	init|*)
		[ ! -f "$command_script" ] && \
			echo-yellow "Unknown command '$*'. See 'ac-p help' for list of available commands" && \
			exit 1

		shift
		exec "$command_script" "$@"
esac
